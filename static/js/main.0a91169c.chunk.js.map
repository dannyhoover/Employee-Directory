{"version":3,"sources":["App.js","index.js"],"names":["tableHeaders","App","useState","employees","setEmployees","nameFilter","setNameFilter","sortField","setSortField","sortDirection","setSortDirection","useEffect","fetch","then","res","a","ok","Error","json","results","map","name","picture","email","phone","dob","nameRegex","RegExp","className","placeholder","type","value","onChange","e","target","i","onClick","filter","test","first","last","sort","b","src","thumbnail","date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAGMA,G,MAAe,CAAC,OAAQ,QAAS,QAAS,QA+FjCC,MA7Ff,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,OAGqBJ,mBAAS,QAH9B,mBAGNK,EAHM,KAGKC,EAHL,OAI6BN,mBAAS,GAJtC,mBAINO,EAJM,KAISC,EAJT,KAMbC,qBAAU,WACRC,MAAM,gDAAgDC,KAAtD,uCAA2D,WAAOC,GAAP,iBAAAC,EAAA,yDACpDD,EAAIE,GADgD,sBACtC,IAAIC,MAAM,2BAD4B,uBAE/BH,EAAII,OAF2B,gBAEjDC,EAFiD,EAEjDA,QACRf,GAAa,kBACXe,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,MAA2C,CACrDC,QADU,EAASA,QAEnBD,OACAE,MAHU,EAAkBA,MAI5BC,MAJU,EAAyBA,MAKnCC,IALU,EAAgCA,WAJW,2CAA3D,yDAaC,IAEH,IAAMC,EAAY,IAAIC,OAAOtB,EAAY,KAEzC,OACE,sBAAKuB,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,gCACA,qBAAKA,UAAU,YAAf,+EAGA,uBACEC,YAAY,gBACZC,KAAK,OACLF,UAAU,UACVG,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OAAO3B,EAAc2B,EAAEC,OAAOH,UAE1C,kCACE,gCACE,+BACE,yCACC/B,EAAaoB,KAAI,SAACC,EAAMc,GAAP,OAChB,qBAEEC,QAAS,WACH7B,IAAcc,EAChBX,GAAkBD,IAElBD,EAAaa,GACbX,EAAiB,KAPvB,UAWGW,EACAd,IAAcc,EACO,IAAlBZ,EACE,UACA,UACF,KAfC0B,WAoBb,gCACGhC,EACEkC,QAAO,gBAAGhB,EAAH,EAAGA,KAAH,OAAcK,EAAUY,KAAKjB,EAAKkB,MAAQ,IAAMlB,EAAKmB,SAC5DC,MAAK,SAAC1B,EAAG2B,GACR,GAAkB,SAAdnC,EAAsB,CACxB,GAAIQ,EAAEM,KAAKkB,MAAQG,EAAErB,KAAKkB,MAAO,OAAO9B,EACnC,GAAIM,EAAEM,KAAKkB,MAAQG,EAAErB,KAAKkB,MAAO,OAAQ9B,EACzC,GAAIM,EAAEM,KAAKmB,KAAOE,EAAErB,KAAKmB,KAAM,OAAO/B,EACtC,GAAIM,EAAEM,KAAKmB,KAAOE,EAAErB,KAAKmB,KAAM,OAAQ/B,MACvC,IAAIM,EAAER,GAAamC,EAAEnC,GAAY,OAAOE,EAC1C,GAAIM,EAAER,GAAamC,EAAEnC,GAAY,OAAQE,EAC9C,OAAO,KAERW,KAAI,WAAuCe,GAAvC,IAAGb,EAAH,EAAGA,QAASD,EAAZ,EAAYA,KAAME,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,IAAhC,OACH,+BACE,6BACE,qBAAKkB,IAAKrB,EAAQsB,cAEpB,6BAAKvB,EAAKkB,MAAQ,IAAMlB,EAAKmB,OAC7B,6BAAKjB,IACL,6BAAKC,IACL,6BAAKC,EAAIoB,SAPFV,e,MC7EvBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a91169c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst tableHeaders = [\"name\", \"email\", \"phone\", \"dob\"];\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [sortField, setSortField] = useState(\"name\");\n  const [sortDirection, setSortDirection] = useState(1);\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?nat=us&results=10\").then(async (res) => {\n      if (!res.ok) throw new Error(\"failed to get employees\");\n      const { results } = await res.json();\n      setEmployees(() =>\n        results.map(({ name, picture, email, phone, dob }) => ({\n          picture,\n          name,\n          email,\n          phone,\n          dob\n        }))\n      );\n    });\n  }, []);\n\n  const nameRegex = new RegExp(nameFilter, \"i\");\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">EMPLOYEE DIRECTORY</div>\n      <div className=\"subHeader\">\n        Click a column name to sort or type a name to narrow your results\n      </div>\n      <input\n        placeholder=\"Search a name\"\n        type=\"text\"\n        className=\"textBox\"\n        value={nameFilter}\n        onChange={(e) => setNameFilter(e.target.value)}\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Picture</th>\n            {tableHeaders.map((name, i) => (\n              <th\n                key={i}\n                onClick={() => {\n                  if (sortField === name) {\n                    setSortDirection(-sortDirection);\n                  } else {\n                    setSortField(name);\n                    setSortDirection(1);\n                  }\n                }}\n              >\n                {name}\n                {sortField === name\n                  ? sortDirection === 1\n                    ? \" \\u02C4\"\n                    : \" \\u02C5\"\n                  : \"\"}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees\n            .filter(({ name }) => nameRegex.test(name.first + \" \" + name.last))\n            .sort((a, b) => {\n              if (sortField === \"name\") {\n                if (a.name.first > b.name.first) return sortDirection;\n                else if (a.name.first < b.name.first) return -sortDirection;\n                else if (a.name.last > b.name.last) return sortDirection;\n                else if (a.name.last < b.name.last) return -sortDirection;\n              } else if (a[sortField] > b[sortField]) return sortDirection;\n              else if (a[sortField] < b[sortField]) return -sortDirection;\n              return 0;\n            })\n            .map(({ picture, name, email, phone, dob }, i) => (\n              <tr key={i}>\n                <td>\n                  <img src={picture.thumbnail} />\n                </td>\n                <td>{name.first + \" \" + name.last}</td>\n                <td>{email}</td>\n                <td>{phone}</td>\n                <td>{dob.date}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}